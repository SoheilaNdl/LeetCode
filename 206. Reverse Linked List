# Definition for singly-linked list.
class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next
class Solution:
    def reverseList(self, head: Optional[ListNode]) -> Optional[ListNode]:
        
        # Using a Stack
        # stack = []
        # if not head:
        #     return None
        # while(head):
        #     stack.append(head)
        #     head = head.next

        # my_head = prev = stack.pop()
        # while(len(stack)>0):
        #     current = stack.pop()
        #     prev.next = current
        #     prev = current
        # prev.next = None
        # return my_head

        # Iterative Method
        prev = None
        current = head

        while(current):
            my_next = current.next
            current.next = prev
            prev = current
            current = my_next
        
        return prev
